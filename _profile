default_username='christopher'

## --------------------------------------------------------------
## Colors
## --------------------------------------------------------------

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
  export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
  export TERM=xterm-256color
fi

if tput setaf 1 &> /dev/null; then
  tput sgr0
  if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
    MAGENTA=$(tput setaf 9)
    ORANGE=$(tput setaf 172)
    GREEN=$(tput setaf 190)
    PURPLE=$(tput setaf 141)
    WHITE=$(tput setaf 256)
  else
    MAGENTA=$(tput setaf 5)
    ORANGE=$(tput setaf 4)
    GREEN=$(tput setaf 2)
    PURPLE=$(tput setaf 1)
    WHITE=$(tput setaf 7)
  fi
  BOLD=$(tput bold)
  RESET=$(tput sgr0)
else
  MAGENTA="\033[1;31m"
  ORANGE="\033[1;33m"
  GREEN="\033[1;32m"
  PURPLE="\033[1;35m"
  WHITE="\033[1;37m"
  BOLD=""
  RESET="\033[m"
fi

## --------------------------------------------------------------
## GIT
## --------------------------------------------------------------

function git_info() {
  # check if we're in a git repo
  git rev-parse --is-inside-work-tree &>/dev/null || return

  # quickest check for what branch we're on
  branch=$(git symbolic-ref -q HEAD | sed -e 's|^refs/heads/||')

  # check if it's dirty (via github.com/sindresorhus/pure)
  dirty=$(git diff --quiet --ignore-submodules HEAD &>/dev/null; [ $? -eq 1 ]&& echo -e "*")

  echo $WHITE" on "$PURPLE$branch$dirty
}

## --------------------------------------------------------------
## Only show username/host if not default
## --------------------------------------------------------------
function usernamehost() {
  if [ $USER != $default_username ]; then echo "${MAGENTA}$USER ${WHITE}at ${ORANGE}$HOSTNAME $WHITEin "; fi
}

## --------------------------------------------------------------
## Prompt
## --------------------------------------------------------------
export PS1="\[\e]2;$PWD\[\a\]\[\e]1;\]$(basename "$(dirname "$PWD")")/\W\[\a\]${BOLD}\$(usernamehost)\[$GREEN\]\w\$(git_info)\[$WHITE\]\n\$ \[$RESET\]"

## --------------------------------------------------------------
## Extending Paths
## --------------------------------------------------------------

# personal bin folder
export PATH=$PATH:~/bin
# use php from mamp
export PATH=/Applications/MAMP/bin/php/php5.4.4/bin:$PATH

## --------------------------------------------------------------
## Aliasses
## --------------------------------------------------------------

alias flushdns="sudo killall -HUP mDNSResponder"
alias ll='ls -lisah'
alias ..='cd ..'
alias cd..='cd ..'
alias sd='sudo'
alias mybin='subl ~/bin'
alias fresh='clear && source ~/.profile'

## --------------------------------------------------------------
## Aliasses // git
## --------------------------------------------------------------

alias gl='git log --date=short --pretty=format:"%C(bold yellow)%h %C(bold green)%ad %C(reset)%s %C(bold blue)[%an]%C(bold red)%d" && echo '
alias gg='git log --all --date=short --format=format:"%C(bold yellow)%h %C(bold green)%ad %C(reset)%s %C(bold blue)[%an]%C(bold red)%d" --graph && echo '
alias gs='git status'
alias gc='git commit -m'
alias gca='git add . && git commit -m'
alias gb='git branch'
alias gp='git push origin'


# SSH-Server

alias ra='ssh admin@ra.local'
alias janiu='ssh bis@janiu.local'

## --------------------------------------------------------------
## Exports
## --------------------------------------------------------------

# i know how to save in emacs ^_^
export EDITOR="emacs"
#osx color terminal
export CLICOLOR=1
# don't put duplicate lines in the history. See bash(1) for more options
# don't overwrite GNU Midnight Commander's setting of `ignorespace'.
HISTCONTROL=$HISTCONTROL${HISTCONTROL+,}ignoredups
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend
# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize
